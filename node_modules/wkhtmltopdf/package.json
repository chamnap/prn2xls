{
  "name": "wkhtmltopdf",
  "version": "0.1.5",
  "description": "A wrapper for the wkhtmltopdf HTML to PDF converter using WebKit",
  "author": {
    "name": "Devon Govett",
    "email": "devongovett@gmail.com",
    "url": "http://badassjs.com/"
  },
  "engines": {
    "node": ">=0.6"
  },
  "dependencies": {
    "slang": ">=0.2"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/devongovett/node-wkhtmltopdf.git"
  },
  "scripts": {
    "test": "mocha -R spec"
  },
  "devDependencies": {
    "mocha": "~2.2.5",
    "rewire": "~2.3.4"
  },
  "bugs": {
    "url": "http://github.com/devongovett/node-wkhtmltopdf/issues"
  },
  "gitHead": "b0ee9e8f2ecb54ce42fb60c7ccc91fa3039faa85",
  "readme": "node-wkhtmltopdf\n================\n\nA Node.js wrapper for the [wkhtmltopdf](http://wkhtmltopdf.org/) command line tool.  As the name implies, \nit converts HTML documents to PDFs using WebKit.\n\n## Usage\n\n```javascript\nvar wkhtmltopdf = require('wkhtmltopdf');\n\n// URL\nwkhtmltopdf('http://google.com/', { pageSize: 'letter' })\n  .pipe(fs.createWriteStream('out.pdf'));\n  \n// HTML\nwkhtmltopdf('<h1>Test</h1><p>Hello world</p>')\n  .pipe(res);\n  \n// output to a file directly\nwkhtmltopdf('http://apple.com/', { output: 'out.pdf' });\n\n// Optional callback\nwkhtmltopdf('http://google.com/', { pageSize: 'letter' }, function (code, signal) {\n});\nwkhtmltopdf('http://google.com/', function (code, signal) {\n});\n\n```\n\n`wkhtmltopdf` is just a function, which you call with a URL or inline HTML string, or an Array of objects (see [Multi-Source-Input](#multi-source-input)), \nand it returns a stream that you can read from or pipe to wherever you like (e.g. a file, or an HTTP response).\n\nThere are [many options](http://wkhtmltopdf.org/docs.html) available to\nwkhtmltopdf.  All of the command line options are supported as documented on the page linked to above.  The\noptions are camelCased instead-of-dashed as in the command line tool.\n\nThere is also an `output` option that can be used to write the output directly to a filename, instead of returning\na stream.\n\n### Multi-Source-Input\n\n`wkhtmltopdf` supports the ability to construct a PDF from several source documents, and can even generate a table-of-contents based on an outline inferred from the source HTML structure. To combine several documents into a single PDF, pass an array as the first argument. Each element of the array represents a single source for the resulting PDF, and must be either:\n\n * A string containing the source URL or the string `toc` to generate a Table of Contents\n * An object conforming to the following structure:\n\n```\n  {\n    type: STRING,     // Optional: 'cover' or 'toc'\n    url: STRING,      // URL to source. Omit for type: 'toc'\n    options: {...},   // Page-specific options. Same format as global options\n  }  \n```\n\n\n## Installation\n\nFirst, you need to install the wkhtmltopdf command line tool on your system.  The easiest way to do this is to\n[download](http://wkhtmltopdf.org/downloads.html#stable) a prebuilt version for your system.  Don't try to use\nthe packages provided by your distribution as they may not be using a patched Qt and have missing features.\n\nFinally, to install the node module, use `npm`:\n\n    npm install wkhtmltopdf\n    \nBe sure `wkhtmltopdf` is in your PATH when you're done installing.  If you don't want to do this for some reason, you can change\nthe `wkhtmltopdf.command` property to the path to the `wkhtmltopdf` command line tool.\n    \n## Testing\n\n```\nnpm test\n```\n    \n## License\n\nMIT\n",
  "readmeFilename": "readme.md",
  "homepage": "https://github.com/devongovett/node-wkhtmltopdf#readme",
  "_id": "wkhtmltopdf@0.1.5",
  "_shasum": "dc4e5241b6b75ae8685a958caec39da82e0772a5",
  "_from": "git+ssh://git@github.com/knassar/node-wkhtmltopdf.git#cover-toc-multi-page",
  "_resolved": "git+ssh://git@github.com/knassar/node-wkhtmltopdf.git#b0ee9e8f2ecb54ce42fb60c7ccc91fa3039faa85"
}
